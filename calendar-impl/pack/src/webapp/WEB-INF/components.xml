<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<bean id="org.sakaiproject.calendar.api.CalendarService"
			class="org.sakaiproject.calendar.impl.DbCalendarService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="memoryService"><ref bean="org.sakaiproject.memory.api.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.db.api.SqlService"/></property>
		<property name="entityManager"><ref bean="org.sakaiproject.entity.api.EntityManager"/></property>
 		<property name="serverConfigurationService"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property>
		<property name="idManager"><ref bean="org.sakaiproject.id.api.IdManager"/></property>
		<property name="siteService"><ref bean="org.sakaiproject.site.api.SiteService"/></property>
		<property name="aliasService"><ref bean="org.sakaiproject.alias.api.AliasService"/></property>
		<property name="authzGroupService"><ref bean="org.sakaiproject.authz.api.AuthzGroupService"/></property>
		<property name="functionManager"><ref bean="org.sakaiproject.authz.api.FunctionManager"/></property>
		<property name="securityService"><ref bean="org.sakaiproject.authz.api.SecurityService"/></property>
		<property name="eventTrackingService"><ref bean="org.sakaiproject.event.api.EventTrackingService"/></property>
		<property name="sessionManager"><ref bean="org.sakaiproject.tool.api.SessionManager"/></property>
		<property name="threadLocalManager"><ref bean="org.sakaiproject.thread_local.api.ThreadLocalManager"/></property>
		<property name="timeService"><ref bean="org.sakaiproject.time.api.TimeService"/></property>
		<property name="toolManager"><ref bean="org.sakaiproject.tool.api.ToolManager"/></property>
		<property name="userDirectoryService"><ref bean="org.sakaiproject.user.api.UserDirectoryService"/></property>
 		<property name="containerTableName"><value>CALENDAR_CALENDAR</value></property>
 		<property name="resourceTableName"><value>CALENDAR_EVENT</value></property>
 		<property name="caching"><value>false</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>
	
	<bean id="org.sakaiproject.calendar.api.CalendarImporterService"
		class="org.sakaiproject.calendar.impl.GenericCalendarImporter"
		init-method="init"
		destroy-method="destroy"
		singleton="true">
		<property name="calendarService"><ref bean="org.sakaiproject.calendar.api.CalendarService"/></property>
		<property name="timeService"><ref bean="org.sakaiproject.time.api.TimeService"/></property>
	</bean>
	
	<bean id="org.sakaiproject.calendar.api.ExternalCalendarSubscriptionService"
		class="org.sakaiproject.calendar.impl.BaseExternalCalendarSubscriptionService"
		init-method="init" destroy-method="destroy"
		singleton="true">
		<property name="calendarService"><ref bean="org.sakaiproject.calendar.api.CalendarService"/></property>
 		<property name="serverConfigurationService"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property>
		<property name="entityManager"><ref bean="org.sakaiproject.entity.api.EntityManager"/></property>
		<property name="siteService"><ref bean="org.sakaiproject.site.api.SiteService"/></property>
		<property name="calendarImporterService"><ref bean="org.sakaiproject.calendar.api.CalendarImporterService"/></property>
		<property name="securityService"><ref bean="org.sakaiproject.authz.api.SecurityService"/></property>
		<property name="sessionManager"><ref bean="org.sakaiproject.tool.api.SessionManager"/></property>
		<property name="timeService"><ref bean="org.sakaiproject.time.api.TimeService"/></property>
		<property name="toolManager"><ref bean="org.sakaiproject.tool.api.ToolManager"/></property>
		<property name="idManager"><ref bean="org.sakaiproject.id.api.IdManager"/></property>
		<property name="institutionalSubscriptionCache">
			<ref bean="org.sakaiproject.calendar.impl.BaseExternalCacheSubscriptionService.institutionalCache"/>
		</property>
		<property name="userSubscriptionCache">
			<ref bean="org.sakaiproject.calendar.impl.BaseExternalCacheSubscriptionService.userCache"/>
		</property>
		<property name="timer">
			<ref bean="org.sakaiproject.calendar.impl.EhCacheRefresh.timer"/>
		</property>
	</bean>
 
	<!-- This holds most of the stuff for the calendar caches. -->
	<import resource="classpath:/calendar-caches.xml"/>
	
	<!-- Beans to pull configuration from sakai.properties. -->
	<bean id="calendar.external.subscriptions.institutional.cachetime" factory-bean="org.sakaiproject.component.api.ServerConfigurationService"
		factory-method="getInt">
			<constructor-arg value="calendar.external.subscriptions.institutional.cachetime"/>
			<constructor-arg value="120"/>
	</bean>
	
	<bean id="calendar.external.subscriptions.user.cachetime" factory-bean="org.sakaiproject.component.api.ServerConfigurationService"
		factory-method="getInt">
			<constructor-arg value="calendar.external.subscriptions.user.cachetime"/>
			<constructor-arg value="120"/>
	</bean>
	
	<bean id="calendar.external.subscriptions.institutional.cacheentries" factory-bean="org.sakaiproject.component.api.ServerConfigurationService"
		factory-method="getInt">
			<constructor-arg value="calendar.external.subscriptions.institutional.cacheentries"/>
			<constructor-arg value="16"/>
	</bean>
 
	<bean id="calendar.external.subscriptions.user.cacheentries" factory-bean="org.sakaiproject.component.api.ServerConfigurationService"
		factory-method="getInt">
			<constructor-arg value="calendar.external.subscriptions.user.cacheentries"/>
			<constructor-arg value="32"/>
	</bean>
	
	<!-- This is the bean that reloads a calendar in a particular case -->
	<bean id="org.sakaiproject.calendar.impl.ExternalCalendarElementRefresher"
		class="org.sakaiproject.calendar.impl.ExternalCalendarElementRefresher">
		<property name="exeternalCalendarSubscriptionService">
			<ref
				bean="org.sakaiproject.calendar.api.ExternalCalendarSubscriptionService"/>
		</property>
	</bean>

	<bean id="org.sakaiproject.calendar.api.OpaqueUrlDao" 
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		singleton="true">
		<property name="transactionManager">
			<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		</property>
		<property name="target">
			<bean class="org.sakaiproject.calendar.impl.OpaqueUrlDaoHbm">
				<property name="sessionFactory"
					ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<import resource="hibernate-hbms.xml"/>

</beans>
